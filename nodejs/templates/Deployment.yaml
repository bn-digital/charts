{{ $fullname := include "nodejs.fullname" . }}
{{ $app := .Values.app }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullname }}
  labels: {{ include "nodejs.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  selector:
    matchLabels: {{ include "nodejs.selectorLabels" . | nindent 6 }}
  template:
    metadata: {{ with .Values.podAnnotations }}
      annotations: {{ toYaml . | nindent 8 }} {{ end }} {{ with .Values.vault }} {{ if .enabled }}
        vault.hashicorp.com/agent-inject: {{ .enabled | toString | quote }}
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/role: {{ .role }} {{ range $name,$path := .secrets }}
        vault.hashicorp.com/agent-inject-secret-{{ printf "%s-%s" $.Release.Name $name }}: {{ $path | quote }} {{ end }} {{ end }} {{ end }}
      labels: {{ include "nodejs.selectorLabels" . | nindent 8 }}
    spec: {{ with $secret := .Values.imagePullSecrets }}
      imagePullSecrets: {{ range $secret }}
        - name: {{ . }} {{ end }} {{ end }} {{ with $volumes := .Values.volumes }}
      volumes: {{ range  $volumes }}
        - name: {{ .name }} {{ if .persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ printf "%s-%s" $fullname .name }} {{ else }}
          emptyDir: { } {{ end }} {{ end }} {{ end }}
      securityContext: {{ toYaml .Values.podSecurityContext | nindent 8 }} {{ with .Values.nodeSelector }}
      nodeSelector: {{ toYaml . | nindent 8 }} {{ end }} {{ with .Values.affinity }}
      affinity: {{ toYaml . | nindent 8 }} {{ end }} {{ with .Values.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }} {{ end }} {{ with .Values.priorityClassName }}
      priorityClassName: {{ . }} {{ end }} {{ with .Values.serviceAccount.name }}
      serviceAccountName: {{ . }} {{ end }}
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          securityContext: {{ toYaml .Values.securityContext | nindent 12 }}
          ports:
            - containerPort: {{ .Values.app.port }}
              name: http
              protocol: TCP {{ with $volumes := .Values.volumes }}
          volumeMounts: {{ range $volumes }}
            - mountPath: {{ printf "%s/%s" $app.workingDir .path }}
              name: {{ .name }} {{ end }} {{ end }}
          envFrom: {{ with .Values.envSecrets }} {{ range $name := . }}
            - secretRef:
                optional: true
                name: {{ $name }} {{ end }} {{ end }} {{ with .Values.vault }} {{ if .enabled }} {{ range $name,$path := .secrets }}
            - secretRef:
                name: {{ printf "%s-%s" $.Release.Name $name }}
                optional: true {{ end }} {{ end }} {{ end }} {{ with .Values.configMapsSecrets }} {{ range $name := . }}
            - configMapRef:
                optional: true
                name: {{ $name }} {{ end }} {{ end }}
            - configMapRef:
                name: {{ include "nodejs.fullname" . }} {{ with .Values.app.env }}
          env: {{ range $name,$value := . }}
            - name: {{ $name }}
              value: {{ $value | quote }} {{ end }} {{ end }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
