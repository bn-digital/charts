repositories:
  - name: bndigital
    url: https://dcr.bndigital.dev/chartrepo/library

helmDefaults:
  historyMax: 3
  createNamespace: true
  cleanupOnFail: true

environments:
  default:
    values:
      - database:
          enabled: false
        tlsIssuer:
          enabled: false
  staging:
    values:
      - database:
          enabled: false
        tlsIssuer:
          enabled: true
  production:
    values:
      - database:
          enabled: true
        tlsIssuer:
          enabled: true

releases:
  - name: '{{ requiredEnv "APP_NAME" }}-website'
    namespace: '{{ requiredEnv "APP_ENV" }}'
    chart: bndigital/app
    version: 1.2.14
    labels:
      component: website
    values:
      - app:
          name: '{{ requiredEnv "APP_NAME" }}'
        image:
          registry:
            url: '{{ requiredEnv "DOCKER_REGISTRY" }}/{{ requiredEnv "APP_NAME" }}'
            username: '{{ requiredEnv "DOCKER_USERNAME" }}'
            password: '{{ requiredEnv "DOCKER_PASSWORD" }}'
          repository: 'website'
          tag: '{{ requiredEnv "APP_VERSION" }}'
          pullSecrets: ['{{ requiredEnv "APP_NAME" }}-website-registry']
        vcs:
          repository: '{{ requiredEnv "GITHUB_REPOSITORY" }}'
          ref: '{{ requiredEnv "GITHUB_REF_NAME" }}'
          commit: '{{ requiredEnv "GITHUB_SHA" }}'
        ingress:
          host: '{{ requiredEnv "DOMAIN" }}'
          tls:
            issuer:
              enabled: {{ .Values.tlsIssuer.enabled }}
              name: letsencrypt
          proxy:
            www: false
            paths:
              - implementation: 'strapi'
                service:
                  name: '{{ requiredEnv "APP_NAME" }}-cms-app'

  - name: '{{ requiredEnv "APP_NAME" }}-cms'
    namespace: '{{ requiredEnv "APP_ENV" }}'
    chart: bndigital/app
    version: 1.2.14
    labels:
      component: cms
    values:
      - app:
          name: '{{ requiredEnv "APP_NAME" }}'
        image:
          registry:
            url: '{{ env "DOCKER_REGISTRY" | default "dcr.bndigital.dev" }}/{{ requiredEnv "APP_NAME" }}'
          repository: 'cms'
          tag: '{{ requiredEnv "APP_VERSION" }}'
          pullSecrets: ['{{ requiredEnv "APP_NAME" }}-website-registry']
        vcs:
          repository: '{{ requiredEnv "GITHUB_REPOSITORY" }}'
          ref: '{{ requiredEnv "GITHUB_REF_NAME" }}'
          commit: '{{ requiredEnv "GITHUB_SHA" }}'
        database:
          enabled: {{ .Values.database.enabled }}
          auth:
            username: '{{ requiredEnv "APP_NAME" }}'
            password: '{{ env "DATABASE_PASSWORD" | default "password" }}'
            database: '{{ requiredEnv "APP_NAME" }}'
            postgresPassword: '{{ env "DATABASE_ROOT_PASSWORD" | default "password" }}'
          primary:
            priorityClassName: system-node-critical
            persistence:
              size: 2Gi
            resources:
              requests:
                cpu: '1.0'
                memory: '1Gi'
          serviceAccount:
            create: true
          volumePermissions:
            enabled: true
        healthcheck:
          path: /graphql
