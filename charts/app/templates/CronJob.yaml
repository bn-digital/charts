{{ with .Values.database }} {{ if and .enabled .backup.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ printf "%s-%s" $.Release.Name "database-backup" }}
  labels: {{ include "app.labels" $ | nindent 4 }}
spec:
  schedule: {{ .backup.schedule }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: dump-s3
              image: schickling/postgres-backup-s3:latest
              imagePullPolicy: IfNotPresent
              envFrom:
                - secretRef:
                    optional: true
                    name: {{ printf "%s-%s" $.Release.Name "s3" }}
              env:
                - name: S3_PREFIX
                  value: "backups"
                - name: POSTGRES_HOST_OPTS
                  value: --search_path={{ .backup.schema }}
                - name: POSTGRES_HOST
                  valueFrom:
                    secretKeyRef:
                      key: DATABASE_HOST
                      name: {{ printf "%s-%s" $.Release.Name "database" }}
                - name: POSTGRES_PORT
                  valueFrom:
                    secretKeyRef:
                      key: DATABASE_PORT
                      name: {{ printf "%s-%s" $.Release.Name "database" }}
                - name: POSTGRES_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: DATABASE_NAME
                      name: {{ printf "%s-%s" $.Release.Name "database" }}
                - name: POSTGRES_USER
                  valueFrom:
                    secretKeyRef:
                      key: DATABASE_USERNAME
                      name: {{ printf "%s-%s" $.Release.Name "database" }}
                - name: POSTGRES_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: DATABASE_PASSWORD
                      name: {{ printf "%s-%s" $.Release.Name $.Values.nameOverride }}
          restartPolicy: OnFailure
      backoffLimit: 2
      completions: 1
      activeDeadlineSeconds: 120
      ttlSecondsAfterFinished: 0 {{ end }} {{ end }}

