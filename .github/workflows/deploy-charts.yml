on:
  workflow_call:
    inputs:
      secrets:
        type: string
        description: Additional key-value map of Value secret paths & names which will be mapped to env variables
        required: false
        default: ''
      environment:
        type: string
        required: false
        default: 'staging' 
      version:
        type: string
        required: false
        default: 'latest' 
        
env:
  APP_ENV: ${{ github.ref_type == 'tag' && 'production' || 'staging' }}
  APP_NAME: ${{ github.event.repository.name }}
  APP_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || 'latest' }}
  DOMAIN: ${{ github.event.repository.name }}.bndigital.dev

concurrency:
  cancel-in-progress: false
  group: ${{ github.workflow }}-${{ github.ref_name }} 
  
jobs:
  helm:
    runs-on: ${{ github.ref_protected && 'self-hosted' || 'ubuntu-latest' }}
    environment:
      name: ${{ github.ref_type == 'tag' && 'production' || 'staging' }}
      url:  ${{ steps.status.outputs.url }}
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Import Vault secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          method: github
          url: ${{ secrets.VAULT_ENDPOINT }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          secrets: |
            infrastructure/data/harbor        registry  | DOCKER_REGISTRY ;
            infrastructure/data/harbor        username  | DOCKER_USERNAME ;
            infrastructure/data/harbor        password  | DOCKER_PASSWORD ;
            infrastructure/data/digitalocean  token     | DIGITALOCEAN_TOKEN ;
            infrastructure/data/kubernetes    cluster   | KUBERNETES_CLUSTER ;
            ${{ inputs.secrets }}

      - name: Setup DigitalOcean cli
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DIGITALOCEAN_TOKEN }}

      - name: Configure Kubernetes context
        run: doctl kubernetes cluster kubeconfig save ${{ env.KUBERNETES_CLUSTER }} --set-current-context

      - name: Release Helm charts
        uses: hiberbee/github-action-helm@1.14.0
        env:
          TLS_ENABLED: ${{ github.ref_type == 'tag' }}
          DATABASE_ENABLED: ${{ github.ref_type == 'tag' }}
          DATABASE_NAME: ${{ env.APP_NAME }}
        with:
          helmfile: apply
          environment: ${{ env.APP_ENV }}
          values: |
            nodeSelector="doks.digitalocean.com/node-pool=projects"

      - name: Deployment status
        id: status
        run: echo "url=https://${{ env.DOMAIN }}" >> $GITHUB_OUTPUT
